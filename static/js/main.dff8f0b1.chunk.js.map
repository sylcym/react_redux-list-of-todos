{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/filterTodos.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","status","query","initialState","ALL","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","id","title","completed","isCurrent","classNames","onClick","todoActions","TodoFilter","currentFilters","showClear","onSubmit","event","preventDefault","value","onChange","target","filterActions","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","user","setUser","isLoadingError","setIsLoadingError","loadingUserData","a","userFromServer","useEffect","isLoading","href","email","name","App","loadTodos","todosFromServer","visibleTodos","filteredTodos","normalizedQuery","toLowerCase","includes","filterTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,8DCoBCC,EANG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAIED,EARM,iBAAyB,CAAEE,KAAM,uBA+BrCE,EAlBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MAEb,IAAK,kBACH,OAAO,eACFI,EAAOH,SAEd,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,K,SDvCDN,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KEYZ,IAYaC,EAZQ,SAACO,GAAD,MAAmC,CACtDL,KAAM,eACNC,QAASI,IAUEP,EAPO,SAACQ,GAAD,MAAiC,CACnDN,KAAM,cACNC,QAASK,IAeLC,EAAsB,CAC1BD,MAAO,GACPD,OAAQR,EAAOW,KAuBFC,EApBO,WAGhB,IAFJN,EAEG,uDAFYI,EACfH,EACG,uCACH,OAAQA,EAAOJ,MACb,IAAK,eACH,OAAO,2BACFG,GADL,IAEEE,OAAQD,EAAOH,UAEnB,IAAK,cACH,OAAO,2BACFE,GADL,IAEEG,MAAOF,EAAOH,UAElB,QACE,OAAOE,I,QC9BAL,EArBI,SAACY,GAAD,MAA+B,CAC9CV,KAAM,YACNC,QAASS,IAoBIC,EAbM,WAGP,IAFZR,EAEW,uDAFI,GACfC,EACW,uCACX,MACO,cADCA,EAAOJ,KAEJ,YAAII,EAAOH,SAEXE,GCbPS,EAAcC,0BAAgB,CAClCC,YAAaZ,EACba,OAAQN,EACRC,MAAOC,IAIIK,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,qECfPC,EAAoCC,IACpCC,EAAkDC,I,OCOlDC,EAA4B,SAAC,GAAe,IAAbf,EAAY,EAAZA,MACpCI,EAAcS,GAAe,SAAApB,GAAK,OAAIA,EAAMW,eAC5CY,EAAWL,IAEjB,OACE,sCACIX,EAAMiB,QACN,mBAAGC,UAAU,0BAAb,iEAKF,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCAEGlB,EAAMmB,KAAI,SAAA9B,GACT,IAAQ+B,EAAyB/B,EAAzB+B,GAAIC,EAAqBhC,EAArBgC,MAAOC,EAAcjC,EAAdiC,UACbC,GAAuB,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAagB,MAAOA,EAEtC,OACE,qBACE,UAAQ,OACRF,UAAWM,IAAW,CACpB,4BAA6BD,IAHjC,UAOE,oBAAIL,UAAU,eAAd,SACGE,IAEH,oBAAIF,UAAU,eAAd,SACGI,GACC,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWM,IAAW,CACvB,mBAAoBF,EACpB,mBAAoBA,IAFtB,SAKGD,MAIL,oBAAIH,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV5B,KAAK,SACLmC,QAAS,kBAAMT,EAASU,EAAoBrC,KAJ9C,SAME,sBAAM6B,UAAU,OAAhB,SACE,mBAAGA,UAAWM,IAAW,MAAO,CAC9B,eAAgBD,EAChB,UAAWA,cAjCdH,eC9CRO,EAAuB,WAClC,IAAMC,EAAiBf,GAAe,SAAApB,GAAK,OAAIA,EAAMY,UAC/CW,EAAWL,IACThB,EAAkBiC,EAAlBjC,OAAQC,EAAUgC,EAAVhC,MA0BViC,EAA8B,IAAjBjC,EAAMqB,QAAiBtB,IAAWR,EAAOW,IAE5D,OACE,uBACEoB,UAAU,mBACVY,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGd,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOtC,EACPuC,SA9BQ,SAACH,GAGjB,OAFkBA,EAAMI,OAAhBF,OAGN,IAAK,MACHjB,EAASoB,EAA2BjD,EAAOW,MAC3C,MACF,IAAK,SACHkB,EAASoB,EAA2BjD,EAAOkD,SAC3C,MACF,IAAK,YACHrB,EAASoB,EAA2BjD,EAAOmD,cAgBzC,UAKE,wBAAQL,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR5B,KAAK,OACL4B,UAAU,QACVqB,YAAY,YACZN,MAAOrC,EACPsC,SApDS,SAACH,GAChB,IAAQE,EAAUF,EAAMI,OAAhBF,MAERjB,EAASoB,EAA0BH,OAmD/B,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SACGZ,GAEC,wBACE,UAAQ,oBACRvC,KAAK,SACL4B,UAAU,SACVO,QAAS,WACPT,EAASoB,EAA0B,KACnCpB,EAASoB,EAA2BjD,EAAOW,kBC1E9C4C,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASyB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KChBlDC,EAAsB,WACjC,MAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACMvD,EAAcS,GAAe,SAAApB,GAAK,OAAIA,EAAMW,eAC5CY,EAAWL,IACjB,EAA4C8C,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEA,EAMIzD,EALFgB,EADF,EACEA,GACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACAiC,EAJF,EAIEA,OAIIO,EAAe,uCAAG,4BAAAC,EAAA,+EAEST,EAAQC,GAFjB,OAEdS,EAFc,OAIpBL,EAAQK,GACRH,GAAkB,GALE,gDAOpBA,GAAkB,GAPE,yDAAH,qDAWrBI,qBAAU,WACRH,MACC,IAEH,IAAMI,GAAaR,IAASE,EAE5B,OACE,sBAAK1C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACdgD,EACG,cAAC,EAAD,IAEA,sBAAKhD,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,KAIZ,wBACE9B,KAAK,SACL4B,UAAU,SACV,UAAQ,cACRO,QAAS,kBAAMT,EAASU,WAI5B,sBAAKR,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGG,IAGH,oBAAGH,UAAU,QAAQ,UAAQ,aAA7B,UACGI,EACG,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBACH,OACC0C,EAGE,mBACE1C,UAAU,0BADZ,yCAFA,mBAAGiD,KAAI,wBAAYT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMU,OAAzB,gBAAmCV,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMW,oBC3DhDC,EAAgB,WAC3B,IAAMtE,EAAQa,GAAe,SAAApB,GAAK,OAAIA,EAAMO,SACtCI,EAAcS,GAAe,SAAApB,GAAK,OAAIA,EAAMW,eAC5CC,EAASQ,GAAe,SAAApB,GAAK,OAAIA,EAAMY,UACvCW,EAAWL,IACjB,EAA4C8C,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAEMU,EAAS,uCAAG,4BAAAR,EAAA,+EFAUpB,EAAY,UEAtB,OAER6B,EAFQ,OAIdxD,EAAS5B,EAAiBoF,IAC1BX,GAAkB,GALJ,gDAOdA,GAAkB,GAPJ,yDAAH,qDAWfI,qBAAU,WACRM,OAGF,IAAME,ECjCmB,SACzBzE,EACAK,GAKA,IAAIqE,EAAgB1E,EACZJ,EAAkBS,EAAlBT,MAAOD,EAAWU,EAAXV,OAmBf,OAjBIC,IACF8E,EAAgBA,EAAcrE,QAAO,SAAAhB,GACnC,IAAMsF,EAAkB/E,EAAMgF,cAE9B,OAAOvF,EAAKgC,MAAMuD,cAAcC,SAASF,OAI9B,WAAXhF,IACF+E,EAAgBA,EAAcrE,QAAO,SAAAhB,GAAI,OAAMA,EAAKiC,cAGvC,cAAX3B,IACF+E,EAAgBA,EAAcrE,QAAO,SAAAhB,GAAI,OACvCA,EAAKiC,cAGFoD,EDMcI,CAAY9E,EAAOK,GAElC6D,GAAalE,EAAMiB,SAAW2C,EAEpC,OACE,qCACE,qBAAK1C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,QAAf,UACGgD,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAUlE,MAAOyE,IAEpBb,GACC,mBAAG1C,UAAU,0BAAb,oDASTd,GAAe,cAAC,EAAD,QEzDhB2E,EAAO,kBACX,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKN0E,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.dff8f0b1.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return {\n        ...action.payload,\n      };\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype ChangeStatus = {\n  type: 'changeStatus',\n  payload: Status,\n};\n\ntype ChangeQuery = {\n  type: 'changeQuery',\n  payload: string,\n};\n\nconst changeStatus = (status: Status): ChangeStatus => ({\n  type: 'changeStatus',\n  payload: status,\n});\n\nconst changeQuery = (query: string): ChangeQuery => ({\n  type: 'changeQuery',\n  payload: query,\n});\n\ntype Action = ChangeQuery | ChangeStatus;\n\nexport const actions = {\n  changeStatus,\n  changeQuery,\n};\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'changeStatus':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    case 'changeQuery':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = { type: 'todos/ADD', payload: Todo[] };\n\nconst addTodos = (todos: Todo[]): AddAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\ntype Action = AddAction;\n\ntype State = Todo[] | [];\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport const actions = { addTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {!todos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n\n          {todos.map(todo => {\n            const { id, title, completed } = todo;\n            const isCurrent = currentTodo?.id === id;\n\n            return (\n              <tr\n                data-cy=\"todo\"\n                className={classNames({\n                  'has-background-info-light': isCurrent,\n                })}\n                key={id}\n              >\n                <td className=\"is-vcentered\">\n                  {id}\n                </td>\n                <td className=\"is-vcentered\">\n                  {completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                  >\n                    {title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(todoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('far', {\n                        'fa-eye-slash': isCurrent,\n                        'fa-eye': !isCurrent,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const currentFilters = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const { status, query } = currentFilters;\n\n  const setQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    dispatch(filterActions.changeQuery(value));\n  };\n\n  const setStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case 'all':\n        dispatch(filterActions.changeStatus(Status.ALL));\n        break;\n      case 'active':\n        dispatch(filterActions.changeStatus(Status.ACTIVE));\n        break;\n      case 'completed':\n        dispatch(filterActions.changeStatus(Status.COMPLETED));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const showClear = (query.length !== 0) || status !== Status.ALL;\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={setStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={setQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {showClear && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                dispatch(filterActions.changeQuery(''));\n                dispatch(filterActions.changeStatus(Status.ALL));\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as todoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  } = currentTodo!;\n\n  const loadingUserData = async () => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n      setIsLoadingError(false);\n    } catch {\n      setIsLoadingError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadingUserData();\n  }, []);\n\n  const isLoading = !user && !isLoadingError;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => dispatch(todoActions.removeTodo())}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n                {!isLoadingError\n                  ? <a href={`mailto:${user?.email}`}>{user?.name}</a>\n                  : (\n                    <p\n                      className=\"notification is-warning\"\n                    >\n                      Can`t load user from server\n                    </p>\n                  )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { filterTodos } from './utils/filterTodos';\n\nexport const App: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const loadTodos = async () => {\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(actions.addTodos(todosFromServer));\n      setIsLoadingError(false);\n    } catch {\n      setIsLoadingError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  });\n\n  const visibleTodos = filterTodos(todos, filter);\n\n  const isLoading = !todos.length && !isLoadingError;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList todos={visibleTodos} />}\n\n              {isLoadingError && (\n                <p className=\"notification is-warning\">\n                  Can`t load todos from server\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos = (\n  todos: Todo[],\n  filter: {\n    query: string,\n    status: Status,\n  },\n) => {\n  let filteredTodos = todos;\n  const { query, status } = filter;\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(todo => {\n      const normalizedQuery = query.toLowerCase();\n\n      return todo.title.toLowerCase().includes(normalizedQuery);\n    });\n  }\n\n  if (status === 'active') {\n    filteredTodos = filteredTodos.filter(todo => (!todo.completed));\n  }\n\n  if (status === 'completed') {\n    filteredTodos = filteredTodos.filter(todo => (\n      todo.completed));\n  }\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}